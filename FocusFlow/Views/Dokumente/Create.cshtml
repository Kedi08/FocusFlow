@model FocusFlow.Models.Dokument

@{
    ViewData["Title"] = "Dokument hinzufügen";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">Neues Dokument hinzufügen</h2>
                </div>
                <div class="card-body">
                    <form asp-action="Create" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Dokumentname</label>
                            <input asp-for="Name" class="form-control" placeholder="Dokumentname eingeben" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Typ" class="form-label">Dokumenttyp</label>
                            <input asp-for="Typ" class="form-control" placeholder="z.B. PDF, DOCX, TXT" />
                            <span asp-validation-for="Typ" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Pfad" class="form-label">Dokument hochladen</label>
                            <input asp-for="Pfad" type="file" class="form-control" />
                            <span asp-validation-for="Pfad" class="text-danger"></span>
                        </div>

                        <!-- Wichtig: parentId und parentType exakt so wie in deiner alten View -->
                        <input type="hidden" name="parentId" value="@ViewBag.ParentId" />
                        <input type="hidden" name="parentType" value="@ViewBag.ParentType" />

                        <input type="hidden" name="ReturnUrl" value="@ViewData["ReturnUrl"]" />

                        <div class="d-flex justify-content-between mt-4">
                            <a href="@ViewData["ReturnUrl"]" class="btn btn-outline-secondary">Abbrechen</a>
                            <button type="submit" class="btn btn-primary">Dokument hinzufügen</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
